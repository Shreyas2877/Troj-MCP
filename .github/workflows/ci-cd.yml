name: CI/CD Pipeline

on:
  push:
    branches: [ v1.0.0 ]
  pull_request:
    branches: [ v1.0.0 ]

env:
  DOCKER_IMAGE_NAME: trojan2877/troj-mcp
  DOCKER_TAG: latest

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # Ensure all linting tools are available
        pip install ruff pytest-cov
        
    - name: Run linting
      run: |
        ruff check .
        ruff format --check .
        
    - name: Run tests with coverage
      run: |
        python -m pytest tests/ --cov=src/macro_man --cov-report=xml --cov-report=html
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  # For pull requests, we need a job that always runs to satisfy status checks
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate PR
      run: |
        echo "âœ… PR validation passed"
        echo "All tests have passed in the test job"
        echo "This PR is ready to be merged"

  build-and-deploy:
    name: Build and Deploy to Docker Hub
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/v1.0.0' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Create GitHub Release
      if: github.ref == 'refs/heads/v1.0.0'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.0
        release_name: Release v1.0.0
        body: |
          ## ðŸš€ Release v1.0.0
          
          ### Features
          - MCP Server with comprehensive tool suite
          - Calendar integration
          - Email management
          - File operations
          - System monitoring
          
          ### Docker Image
          Available on Docker Hub: `${{ env.DOCKER_IMAGE_NAME }}:latest`
          
          ### Usage
          ```bash
          docker run -d --name troj-mcp trojan2877/troj-mcp:latest
          ```
        draft: false
        prerelease: false