#!/bin/bash

# Manual branch protection setup for v1.0.0 release branch
# This script provides step-by-step instructions for setting up branch protection

set -e

REPO="Shreyas2877/Troj-MCP"
BRANCH="v1.0.0"

echo "🔒 Setting up Branch Protection for v1.0.0"
echo "=========================================="
echo ""
echo "Since the GitHub API can be complex, here are the manual steps:"
echo ""
echo "1. 🌐 Go to your repository settings:"
echo "   https://github.com/$REPO/settings/branches"
echo ""
echo "2. 🔍 Find the 'Branch protection rules' section"
echo ""
echo "3. ➕ Click 'Add rule' or 'Add branch protection rule'"
echo ""
echo "4. 📝 Configure the following settings:"
echo ""
echo "   Branch name pattern: v1.0.0"
echo ""
echo "   ✅ Require a pull request before merging:"
echo "      - Required number of reviewers: 1"
echo "      - Dismiss stale PR approvals when new commits are pushed: ✅"
echo "      - Require review from code owners: ❌"
echo ""
echo "   ✅ Require status checks to pass before merging:"
echo "      - Require branches to be up to date before merging: ✅"
echo "      - Status checks:"
echo "        - test"
echo "        - build-and-deploy"
echo ""
echo "   ❌ Restrict pushes that create files:"
echo "      - Note: User restrictions are only available for organization repositories"
echo "      - Personal repositories cannot restrict pushes to specific users"
echo ""
echo "   ✅ Allow force pushes: ❌"
echo "   ✅ Allow deletions: ❌"
echo ""
echo "5. 💾 Click 'Create' or 'Save changes'"
echo ""
echo "6. ✅ Verify the protection is active by checking the branch"
echo ""
echo "🔍 Alternative: Use GitHub CLI (if the API works):"
echo "Run: ./scripts/setup_branch_protection.sh"
echo ""
echo "📖 For more details, see: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches"
